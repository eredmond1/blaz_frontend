@page "/stock/update/{stockId:int}"
@using MyBlazorApp.Models
@using Microsoft.AspNetCore.Components
@using MyBlazorApp.Services
@using Microsoft.AspNetCore.Components.Forms
@inject NavigationManager NavigationManager
@inject StockService StockService



<PageTitle>Post Stocks</PageTitle>


<link href="css/PostStock.css" rel="stylesheet"/>


<div class="center-container">
    <div class="title-background">
        <h1>Update Your Stock</h1>
    </div>
    <div class="form-container">
        <EditForm Model="@stock" OnSubmit="@HandleSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            
            <div>
                <label for="Symbol">Stock Symbol:</label>
                <InputText id="Symbol" @bind-Value="stock.Symbol"></InputText>
            </div>
    
            <div>
                <label for="CompanyName">Company Name:</label>
                <InputText id="CompanyName" @bind-Value="stock.CompanyName"></InputText>
        
            </div>
            <div>
                <label for="Purchase">Purchase:</label>
                <InputNumber id="Purchase" @bind-Value= "stock.Purchase"></InputNumber>
            </div>
    
           <div>
                <label for="LastDiv">Last Dividend:</label>
                <InputNumber id="LastDiv" @bind-Value="stock.LastDiv"></InputNumber>
           </div>
    
            <div>
                <label for="Indestry">Indestry:</label>
                <InputText id="Indestry" @bind-Value="stock.Indestry"></InputText>
            </div>

            <div>
                <label for="MarketCap">MarketCap:</label>
                <InputNumber id="MarketCap" @bind-Value="stock.MarketCap"></InputNumber>
            </div>
    
            <div>
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
        </EditForm>

        <div class="response-message">
            @if(!string.IsNullOrEmpty(statusMessage))
            {
                <p>@statusMessage</p>
            }
        </div>
    </div>

</div>


@code{
    [Parameter]
    public int stockId {get; set; }
    public Stock stock= new();

    public string ?statusMessage;

     private void RouteToHome()
    {
        NavigationManager.NavigateTo("/");
    }

     public async Task HandleSubmit(EditContext context)
     {
        try
        {
            var updatedStock = await StockService.UpdateStockAsync(stockId, stock);
            stock = new Stock();
            statusMessage = "your stock has been updated";
            Console.WriteLine(statusMessage);
            RouteToHome();
        }

        catch(Exception ex)
        {
            statusMessage = ex.Message;
            Console.WriteLine(statusMessage);
        }
     }
}    
